# coding: utf-8

"""
    Wyscout API (v4)

    [Customer resources](https://www.hudl.com/support/wyscout) | [Customer support](https://www.hudl.com/support/contact)  [Wyscout Data resources](https://footballdata.wyscout.com/resources/)  **IMPORTANT: Version switching planned for July 20th 2021.**  On July 20th 2021 we will switch v3 as the Current version. V2 will become Legacy.  Please see [Versioning](#section/Versioning) section for any related details.  # Overview  This is the product documentation for our API service, in which you can find all definitions and technical information you may need.  # Authentication  ## Overview  This page explain how to authenticate to Wyscout APIs using Basic Access Authentication.  ## Using your client software  Depending on your client software you should be provided with a mechanism for supplying an username and password: that will build the required authentication headers automatically.  For example you can specify the -u argument with curl as username:password.  ## Supplying Basic Access Authentication headers  It is possible to construct the authentication headers manually:  * Build a string of the form username:password. * Encode the string in Base64 * Supply an `Authorization` header with content `Basic` followed by the encoded string.   For example, the string `Aladdin:OpenSesame` encodes to `QWxhZGRpbjpPcGVuU2VzYW1l` in base64,   so you would use this string `Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l`  ## Rate limits  To avoid services overload requests are rate limited. The Wyscout API currently enforces a limit of **12** request per second per API Key.  If the rate limit is exceeded, the API will return the following HTTP 429 response:  ```json   {     \"error\": {       \"code\": 429,       \"message\": \"Too many requests\"     }   } ```  # Data glossary and definitions  At the following link you can find our Data Glossary that describes events, metrics and concepts used across the Wyscout API, Platform and reports.  <a href=\"https://dataglossary.wyscout.com/\" target=\"_blank\">Wyscout Data Glossary</a>   ## Pitch coordinates  ![Pitch map](assets/images/WyscoutDataCoordinates.png)  The event's coordinates depends on the subject. The subject's goal to be defended is always **x=0%** and the attack is always **x=100%**. All values are % expressed as **(x,y)**.  # Versioning  Wyscout gives you the chance to choose between three different sets of API endpoints.  ## Current The latest available version. It includes the most recent endpoints and improvements.  ## Preview The beta version of our next official release. Here we start to implement future improvements and new endpoints.  ## Legacy The old version. This is still available and running, in order to let users adapt their tools to new ones.  ## Version Switch  Wyscout will constantly improve its dataset by adding new endpoints and improving the existing ones. “Preview” version is where you can find last delivered updates. When a new and improved “Current” version is released, the previous version becomes “Legacy” – which means it will not immediately cease to exist, giving you the time to adapt your systems. It will be available and running until another new version – “Current” – is released, at least six months after the previous one.  ![Version Switch](assets/images/WyscoutVersionSwitch.png)  Documentation on [apidocs.wyscout.com](apidocs.wyscout.com) will always be available also for “Legacy” version. Each version will receive support as from the following table:  ![Version Support](assets/images/WyscoutVersionSupport.png)

    The version of the OpenAPI document: 2024-05-09T09:09:27Z
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.match import Match

class TestMatch(unittest.TestCase):
    """Match unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Match:
        """Test Match
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Match`
        """
        model = Match()
        if include_optional:
            return Match(
                competition = {"area":{"alpha2code":"JO","alpha3code":"JOR","id":400,"name":"Jordan"},"category":"default","divisionLevel":0,"format":"Domestic league","gender":"male","gsmId":1195,"name":"1st Division","type":"club","wyId":1495},
                competition_id = 56,
                var_date = '',
                dateutc = '',
                duration = 'Regular',
                gameweek = 56,
                gsm_id = 56,
                has_data_available = True,
                label = '',
                referees = [
                    openapi_client.models.match_referees_inner.Match_referees_inner(
                        referee = null, 
                        referee_id = 56, 
                        role = 'referee', )
                    ],
                round = {"competition":{"area":{"alpha2code":"CO","alpha3code":"COL","id":170,"name":"Colombia"},"category":"default","divisionLevel":1,"format":"Domestic cup","gender":"male","gsmId":613,"name":"Copa Colombia","type":"club","wyId":293},"competitionId":293,"endDate":"2020-11-30","gsmId":-5447,"name":"Finals","season":{"active":true,"competitionId":293,"endDate":"2020-11-06","gsmId":-1812,"name":"2020","startDate":"2020-02-13","wyId":186471},"seasonId":186471,"startDate":"2020-11-01","type":"cup","wyId":4421914},
                round_id = 56,
                season = {"active":true,"competition":{"area":{"alpha2code":"WO","alpha3code":"XWO","id":1420,"name":"World"},"category":"default","divisionLevel":0,"format":"International cup","gender":"female","gsmId":1633,"name":"Yongchuan Tournament","type":"international","wyId":43037},"competitionId":43037,"endDate":"2019-11-17","gsmId":-2095,"name":"2019","startDate":"2019-11-07","wyId":186754},
                season_id = 56,
                status = 'Cancelled',
                teams_data = openapi_client.models.match_teams_data.Match teams data(
                    team_aid = null, 
                    team_bid = null, ),
                venue = '',
                winner = 56,
                wy_id = 56
            )
        else:
            return Match(
        )
        """

    def testMatch(self):
        """Test Match"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
