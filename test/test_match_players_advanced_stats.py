# coding: utf-8

"""
    Wyscout API (v4)

    [Customer resources](https://www.hudl.com/support/wyscout) | [Customer support](https://www.hudl.com/support/contact)  [Wyscout Data resources](https://footballdata.wyscout.com/resources/)  **IMPORTANT: Version switching planned for July 20th 2021.**  On July 20th 2021 we will switch v3 as the Current version. V2 will become Legacy.  Please see [Versioning](#section/Versioning) section for any related details.  # Overview  This is the product documentation for our API service, in which you can find all definitions and technical information you may need.  # Authentication  ## Overview  This page explain how to authenticate to Wyscout APIs using Basic Access Authentication.  ## Using your client software  Depending on your client software you should be provided with a mechanism for supplying an username and password: that will build the required authentication headers automatically.  For example you can specify the -u argument with curl as username:password.  ## Supplying Basic Access Authentication headers  It is possible to construct the authentication headers manually:  * Build a string of the form username:password. * Encode the string in Base64 * Supply an `Authorization` header with content `Basic` followed by the encoded string.   For example, the string `Aladdin:OpenSesame` encodes to `QWxhZGRpbjpPcGVuU2VzYW1l` in base64,   so you would use this string `Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l`  ## Rate limits  To avoid services overload requests are rate limited. The Wyscout API currently enforces a limit of **12** request per second per API Key.  If the rate limit is exceeded, the API will return the following HTTP 429 response:  ```json   {     \"error\": {       \"code\": 429,       \"message\": \"Too many requests\"     }   } ```  # Data glossary and definitions  At the following link you can find our Data Glossary that describes events, metrics and concepts used across the Wyscout API, Platform and reports.  <a href=\"https://dataglossary.wyscout.com/\" target=\"_blank\">Wyscout Data Glossary</a>   ## Pitch coordinates  ![Pitch map](assets/images/WyscoutDataCoordinates.png)  The event's coordinates depends on the subject. The subject's goal to be defended is always **x=0%** and the attack is always **x=100%**. All values are % expressed as **(x,y)**.  # Versioning  Wyscout gives you the chance to choose between three different sets of API endpoints.  ## Current The latest available version. It includes the most recent endpoints and improvements.  ## Preview The beta version of our next official release. Here we start to implement future improvements and new endpoints.  ## Legacy The old version. This is still available and running, in order to let users adapt their tools to new ones.  ## Version Switch  Wyscout will constantly improve its dataset by adding new endpoints and improving the existing ones. “Preview” version is where you can find last delivered updates. When a new and improved “Current” version is released, the previous version becomes “Legacy” – which means it will not immediately cease to exist, giving you the time to adapt your systems. It will be available and running until another new version – “Current” – is released, at least six months after the previous one.  ![Version Switch](assets/images/WyscoutVersionSwitch.png)  Documentation on [apidocs.wyscout.com](apidocs.wyscout.com) will always be available also for “Legacy” version. Each version will receive support as from the following table:  ![Version Support](assets/images/WyscoutVersionSupport.png)

    The version of the OpenAPI document: 2024-05-09T09:09:27Z
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.match_players_advanced_stats import MatchPlayersAdvancedStats

class TestMatchPlayersAdvancedStats(unittest.TestCase):
    """MatchPlayersAdvancedStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchPlayersAdvancedStats:
        """Test MatchPlayersAdvancedStats
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchPlayersAdvancedStats`
        """
        model = MatchPlayersAdvancedStats()
        if include_optional:
            return MatchPlayersAdvancedStats(
                players = [
                    {"average":{"accelerations":0,"aerialDuels":1.25,"assists":0,"attackingActions":7.5,"backPasses":11.25,"ballLosses":0,"ballRecoveries":5,"clearances":1.25,"corners":1.25,"counterpressingRecoveries":3.75,"crosses":0,"dangerousOpponentHalfRecoveries":0,"dangerousOwnHalfLosses":0,"defensiveActions":6.25,"defensiveDuels":3.75,"defensiveDuelsWon":0,"directFreeKicks":0,"directFreeKicksOnTarget":0,"directRedCards":0,"dribbleDistanceFromOpponentGoal":49.3,"dribbles":3.75,"dribblesAgainst":0,"dribblesAgainstWon":0,"duels":21.25,"duelsWon":6.25,"fieldAerialDuels":1.25,"fieldAerialDuelsWon":0,"forwardPasses":1.25,"fouls":1.25,"foulsSuffered":1.25,"freeKicks":1.25,"freeKicksOnTarget":1.25,"gkAerialDuels":0,"gkAerialDuelsWon":0,"gkConcededGoals":0,"gkExits":0,"gkSaves":0,"gkShotsAgainst":0,"gkSuccessfulExits":0,"goalKicks":0,"goalKicksLong":0,"goalKicksShort":0,"goals":1.25,"headShots":0,"interceptions":2.5,"keyPasses":0,"lateralPasses":12.5,"linkupPlays":0,"longPassLength":27.9,"longPasses":1.25,"looseBallDuels":2.5,"looseBallDuelsWon":1.25,"missedBalls":1.25,"newDefensiveDuelsWon":2.5,"newDuelsWon":7.5,"newOffensiveDuelsWon":3.75,"newSuccessfulDribbles":1.25,"offensiveDuels":13.75,"offensiveDuelsWon":5,"offsides":0,"opponentHalfRecoveries":3.75,"ownHalfLosses":5,"passLength":17.49,"passes":35,"passesToFinalThird":1.25,"penalties":0,"progressivePasses":2.5,"progressiveRun":1.25,"receivedPass":20,"redCards":0,"secondAssists":0,"shotAssists":0,"shotOnTargetAssists":0,"shots":2.5,"shotsBlocked":0,"shotsOnTarget":2.5,"slidingTackles":0,"smartPasses":1.25,"successfulAttackingActions":3.75,"successfulBackPasses":11.25,"successfulCrosses":0,"successfulDefensiveAction":5,"successfulDribbles":1.25,"successfulForwardPasses":0,"successfulGoalKicks":0,"successfulKeyPasses":0,"successfulLateralPasses":11.25,"successfulLinkupPlays":0,"successfulLongPasses":1.25,"successfulPasses":30,"successfulPassesToFinalThird":1.25,"successfulPenalties":0,"successfulProgressivePasses":0,"successfulSlidingTackles":0,"successfulSmartPasses":0,"successfulThroughPasses":0,"successfulVerticalPasses":11.25,"thirdAssists":0,"throughPasses":0,"touchInBox":2.5,"verticalPasses":12.5,"xgAssist":0,"xgSave":0,"xgShot":1.56,"yellowCards":0},"competition":{"area":{"alpha2code":"JP","alpha3code":"JPN","id":392,"name":"Japan"},"category":"default","divisionLevel":1,"format":"Domestic league","gender":"male","gsmId":109,"name":"J1 League","type":"club","wyId":534},"competitionId":534,"match":{"competitionId":534,"date":"July 8, 2020 at 12:30:00 PM GMT+2","dateutc":"2020-07-08 10:30:00","duration":"Regular","gameweek":3,"gsmId":5046120,"hasDataAvailable":true,"label":"Nagoya Grampus - Gamba Osaka, 2 - 2","referees":[{"refereeId":380130,"role":"referee"},{"refereeId":380204,"role":"firstAssistant"},{"refereeId":380159,"role":"secondAssistant"},{"refereeId":380192,"role":"fourthOfficial"},{"refereeId":0,"role":"firstAdditionalAssistant"},{"refereeId":0,"role":"secondAdditionalAssistant"}],"roundId":4421923,"seasonId":186893,"status":"Played","teamsData":{"12801":{"coachId":145301,"formation":{"bench":[{"assists":"0","goals":"0","ownGoals":"0","playerId":561930,"redCards":"0","shirtNumber":13,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95111,"redCards":"0","shirtNumber":21,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":658508,"redCards":"0","shirtNumber":24,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":40767,"redCards":"0","shirtNumber":8,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":215411,"redCards":"0","shirtNumber":25,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":518220,"redCards":"0","shirtNumber":14,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":287789,"redCards":"0","shirtNumber":17,"yellowCards":"0"}],"lineup":[{"assists":"0","goals":"0","ownGoals":"0","playerId":94949,"redCards":"0","shirtNumber":44,"yellowCards":"0"},{"assists":"0","goals":"1","ownGoals":"0","playerId":271768,"redCards":"0","shirtNumber":10,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":145361,"redCards":"0","shirtNumber":11,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":561881,"redCards":"0","shirtNumber":26,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":145366,"redCards":"0","shirtNumber":3,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95261,"redCards":"0","shirtNumber":23,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":288848,"redCards":"0","shirtNumber":4,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":14793,"redCards":"0","shirtNumber":1,"yellowCards":"0"},{"assists":"0","goals":"1","ownGoals":"0","playerId":149606,"redCards":"0","shirtNumber":16,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":94772,"redCards":"0","shirtNumber":2,"yellowCards":"3"},{"assists":"1","goals":"0","ownGoals":"0","playerId":299313,"redCards":"0","shirtNumber":15,"yellowCards":"70"}],"substitutions":[{"assists":"0","minute":55,"playerIn":287789,"playerOut":94949},{"assists":"0","minute":69,"playerIn":215411,"playerOut":271768},{"assists":"0","minute":85,"playerIn":40767,"playerOut":145361},{"assists":"0","minute":85,"playerIn":518220,"playerOut":561881}]},"hasFormation":1,"score":2,"scoreET":0,"scoreHT":2,"scoreP":0,"side":"home","teamId":12801},"12803":{"coachId":95057,"formation":{"bench":[{"assists":"0","goals":"0","ownGoals":"0","playerId":95507,"redCards":"0","shirtNumber":25,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95573,"redCards":"0","shirtNumber":13,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":44445,"redCards":"0","shirtNumber":18,"yellowCards":"0"},{"assists":"0","goals":"1","ownGoals":"0","playerId":94861,"redCards":"0","shirtNumber":39,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":657907,"redCards":"0","shirtNumber":29,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":94667,"redCards":"0","shirtNumber":7,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95001,"redCards":"0","shirtNumber":10,"yellowCards":"0"}],"lineup":[{"assists":"0","goals":"0","ownGoals":"0","playerId":40768,"redCards":"0","shirtNumber":9,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":14730,"redCards":"0","shirtNumber":33,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":94859,"redCards":"0","shirtNumber":11,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":146058,"redCards":"0","shirtNumber":21,"yellowCards":"0"},{"assists":"0","goals":"1","ownGoals":"0","playerId":254621,"redCards":"0","shirtNumber":5,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":560928,"redCards":"0","shirtNumber":14,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95200,"redCards":"0","shirtNumber":19,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":598052,"redCards":"0","shirtNumber":27,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95108,"redCards":"0","shirtNumber":1,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":95238,"redCards":"0","shirtNumber":8,"yellowCards":"0"},{"assists":"0","goals":"0","ownGoals":"0","playerId":299282,"redCards":"0","shirtNumber":15,"yellowCards":"0"}],"substitutions":[{"assists":"0","minute":61,"playerIn":44445,"playerOut":40768},{"assists":"0","minute":61,"playerIn":94861,"playerOut":14730},{"assists":"0","minute":61,"playerIn":95001,"playerOut":94859},{"assists":"0","minute":71,"playerIn":94667,"playerOut":146058},{"assists":"0","minute":87,"playerIn":657907,"playerOut":254621}]},"hasFormation":1,"score":2,"scoreET":0,"scoreHT":1,"scoreP":0,"side":"away","teamId":12803}},"winner":0,"wyId":5046120},"matchId":5046120,"percent":{"aerialDuelsWon":0,"defensiveDuelsWon":0,"directFreeKicksOnTarget":0,"dribblesAgainstWon":0,"duelsWon":29.41,"fieldAerialDuelsWon":0,"gkAerialDuelsWon":0,"gkSaves":0,"gkSuccessfulExits":0,"goalConversion":50,"headShotsOnTarget":0,"newDefensiveDuelsWon":66.67,"newDuelsWon":35.29,"newOffensiveDuelsWon":27.27,"newSuccessfulDribbles":33.33,"offensiveDuelsWon":36.36,"penaltiesConversion":0,"shotsOnTarget":100,"successfulBackPasses":100,"successfulCrosses":0,"successfulDribbles":33.33,"successfulForwardPasses":0,"successfulGoalKicks":0,"successfulKeyPasses":0,"successfulLateralPasses":90,"successfulLinkupPlays":0,"successfulLongPasses":100,"successfulPasses":85.71,"successfulPassesToFinalThird":100,"successfulProgressivePasses":0,"successfulShotAssists":0,"successfulSlidingTackles":0,"successfulSmartPasses":0,"successfulThroughPasses":0,"successfulVerticalPasses":90,"win":0,"yellowCardsPerFoul":0},"player":{"birthArea":{"alpha2code":"BR","alpha3code":"BRA","id":76,"name":"Brazil"},"birthDate":"1993-07-15","currentTeamId":12801,"firstName":"Gabriel","foot":"left","gender":"male","gsmId":307939,"height":170,"lastName":"Augusto Xavier","middleName":"","passportArea":{"alpha2code":"BR","alpha3code":"BRA","id":76,"name":"Brazil"},"role":{"code2":"MD","code3":"MID","name":"Midfielder"},"shortName":"Gabriel Xavier","status":"active","weight":68,"wyId":271768},"playerId":271768,"positions":[{"percent":80,"position":{"code":"amf","name":"Attacking Midfielder"}},{"percent":19,"position":{"code":"rw","name":"Right Winger"}}],"round":{"competitionId":534,"endDate":"2020-12-19","gsmId":-5456,"name":"Regular Season","seasonId":186893,"startDate":"2020-02-21","type":"table","wyId":4421923},"roundId":4421923,"season":{"active":true,"competitionId":534,"endDate":"2020-12-19","gsmId":-2234,"name":"2020","startDate":"2020-02-21","wyId":186893},"seasonId":186893,"total":{"accelerations":0,"aerialDuels":1,"aerialDuelsWon":0,"assists":0,"attackingActions":6,"backPasses":9,"clearances":1,"corners":1,"counterpressingRecoveries":3,"crosses":0,"dangerousOpponentHalfRecoveries":0,"dangerousOwnHalfLosses":0,"defensiveActions":5,"defensiveDuels":3,"defensiveDuelsWon":0,"directFreeKicks":0,"directFreeKicksOnTarget":0,"directRedCards":0,"dribbles":3,"dribblesAgainst":0,"dribblesAgainstWon":0,"duels":17,"duelsWon":5,"fieldAerialDuels":1,"fieldAerialDuelsWon":0,"forwardPasses":1,"fouls":1,"foulsSuffered":1,"freeKicks":1,"freeKicksOnTarget":1,"gkAerialDuels":0,"gkAerialDuelsWon":0,"gkCleanSheets":0,"gkConcededGoals":0,"gkExits":0,"gkSaves":0,"gkShotsAgainst":0,"gkSuccessfulExits":0,"goalKicks":0,"goalKicksLong":0,"goalKicksShort":0,"goals":1,"headShots":0,"interceptions":2,"keyPasses":0,"lateralPasses":10,"linkupPlays":0,"longPasses":1,"looseBallDuels":2,"looseBallDuelsWon":1,"losses":6,"matches":1,"matchesComingOff":0,"matchesInStart":1,"matchesSubstituted":1,"minutesOnField":72,"minutesTagged":72,"missedBalls":1,"newDefensiveDuelsWon":2,"newDuelsWon":6,"newOffensiveDuelsWon":3,"newSuccessfulDribbles":1,"offensiveDuels":11,"offensiveDuelsWon":4,"offsides":0,"opponentHalfRecoveries":3,"ownHalfLosses":4,"passes":28,"passesToFinalThird":1,"penalties":0,"pressingDuels":9,"pressingDuelsWon":0,"progressivePasses":2,"progressiveRun":1,"receivedPass":16,"recoveries":4,"redCards":0,"secondAssists":0,"shotAssists":0,"shotOnTargetAssists":0,"shots":2,"shotsBlocked":0,"shotsOnTarget":2,"slidingTackles":0,"smartPasses":1,"successfulAttackingActions":3,"successfulBackPasses":9,"successfulCrosses":0,"successfulDefensiveAction":4,"successfulDribbles":1,"successfulForwardPasses":0,"successfulGoalKicks":0,"successfulKeyPasses":0,"successfulLateralPasses":9,"successfulLinkupPlays":0,"successfulLongPasses":1,"successfulPasses":24,"successfulPassesToFinalThird":1,"successfulPenalties":0,"successfulProgressivePasses":0,"successfulSlidingTackles":0,"successfulSmartPasses":0,"successfulThroughPasses":0,"successfulVerticalPasses":9,"thirdAssists":0,"throughPasses":0,"touchInBox":2,"verticalPasses":10,"xgAssist":0,"xgSave":0,"xgShot":1.25,"yellowCards":0}}
                    ]
            )
        else:
            return MatchPlayersAdvancedStats(
        )
        """

    def testMatchPlayersAdvancedStats(self):
        """Test MatchPlayersAdvancedStats"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
